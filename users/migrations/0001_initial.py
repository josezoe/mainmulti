# Generated by Django 5.1.5 on 2025-01-20 03:40

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('vendor', 'Vendor'), ('customer', 'Customer')], default='customer', max_length=10)),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('preferred_currency', models.CharField(blank=True, max_length=3, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=10, null=True)),
                ('income_level', models.CharField(blank=True, choices=[('Low', '< $25,000'), ('Medium', '$25,000 - $75,000'), ('High', '> $75,000')], max_length=20, null=True)),
                ('housing_status', models.CharField(blank=True, choices=[('Owns House', 'Owns House'), ('Owns Apartment', 'Owns Apartment'), ('Rents', 'Rents'), ('Other', 'Other')], max_length=50, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=20, null=True)),
                ('geolocation', models.JSONField(blank=True, null=True)),
                ('last_page_visited', models.URLField(blank=True, null=True)),
                ('visit_count', models.IntegerField(default=0)),
                ('last_visit', models.DateTimeField(blank=True, null=True)),
                ('search_history', models.JSONField(blank=True, null=True)),
                ('purchase_history', models.JSONField(blank=True, null=True)),
                ('last_purchase_date', models.DateTimeField(blank=True, null=True)),
                ('purchase_count', models.IntegerField(default=0)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('segment', models.CharField(blank=True, help_text="User segment, e.g., 'Champions', 'New Customers'", max_length=100, null=True)),
                ('lifestyle', models.CharField(blank=True, choices=[('Active', 'Active Lifestyle'), ('Sedentary', 'Sedentary Lifestyle'), ('Balanced', 'Balanced Lifestyle')], max_length=50, null=True)),
                ('interests', models.JSONField(blank=True, null=True)),
                ('marketing_preferences', models.JSONField(blank=True, null=True)),
                ('behavior_tags', models.JSONField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ConsentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('currency', models.CharField(max_length=3)),
                ('default_timezone', models.CharField(help_text='Default timezone for this country', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='JourneyStage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('order', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Timezone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('customuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('company_name', models.CharField(max_length=100)),
                ('tax_id', models.CharField(blank=True, max_length=20, null=True)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('vendor_unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('business_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('address_line1', models.CharField(blank=True, max_length=255, null=True)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('direction', models.TextField(blank=True, null=True)),
                ('menu', models.URLField(blank=True, null=True)),
                ('cuisine_type', models.CharField(blank=True, max_length=100, null=True)),
                ('cuisines', models.TextField(blank=True, null=True)),
                ('opening_hours', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('about', models.TextField(blank=True, null=True)),
                ('facilities', models.TextField(blank=True, null=True)),
                ('atmosphere', models.CharField(blank=True, max_length=255, null=True)),
                ('spoken_languages', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_options', models.CharField(blank=True, max_length=255, null=True)),
                ('special_conditions', models.TextField(blank=True, null=True)),
                ('average_rating', models.FloatField(blank=True, null=True)),
                ('review_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_vendor_superuser', models.BooleanField(default=False, help_text='Designates whether the user is a superuser for their vendor.')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.customuser',),
        ),
        migrations.AddField(
            model_name='customuser',
            name='city',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.city'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='country',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.country'),
        ),
        migrations.CreateModel(
            name='GDPRCompliance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_access_right', models.BooleanField(default=False)),
                ('has_rectification_right', models.BooleanField(default=False)),
                ('has_erase_right', models.BooleanField(default=False)),
                ('has_portability_right', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IndianUserData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_for_processing', models.BooleanField(default=False)),
                ('data_purpose', models.TextField(blank=True, null=True)),
                ('data_lifecycle', models.JSONField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrivacyByDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('privacy_notice_accepted', models.BooleanField(default=False)),
                ('data_minimized', models.JSONField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoleManager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_add_roles', models.BooleanField(default=False)),
                ('can_edit_roles', models.BooleanField(default=False)),
                ('can_delete_roles', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='role_manager', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Role Manager',
                'verbose_name_plural': 'Role Managers',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='users.country')),
                ('timezone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='users.timezone')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='users.state'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.state'),
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taxes', to='users.state')),
            ],
        ),
        migrations.AddField(
            model_name='customuser',
            name='preferred_timezone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.timezone'),
        ),
        migrations.CreateModel(
            name='UserConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consented', models.BooleanField(default=False)),
                ('date_consented', models.DateTimeField(blank=True, null=True)),
                ('date_withdrawn', models.DateTimeField(blank=True, null=True)),
                ('consent_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.consenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_type', models.CharField(choices=[('Mobile', 'Mobile Device'), ('Desktop', 'Desktop'), ('Tablet', 'Tablet')], max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50, null=True)),
                ('operating_system', models.CharField(blank=True, max_length=50, null=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPrivacySettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_sell_data', models.BooleanField(default=False)),
                ('can_target_ads', models.BooleanField(default=False)),
                ('can_share_data', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserJourney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_entered', models.DateTimeField(auto_now_add=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('stage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.journeystage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'stage')},
            },
        ),
    ]
